name: images
on:
  push:
    branches:
      - main
  pull_request:
env:
  CI_PROJECT_PATH: ${{ github.repository }}
jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v8
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - name: Log in to the Container registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          for target in backend frontend; do
            nix build -L .#$target-image --extra-experimental-features 'nix-command flakes'
            skopeo copy --insecure-policy docker-archive://$(readlink -f ./result) docker://ghcr.io/$CI_PROJECT_PATH/atciss-$target:$GITHUB_SHA

            tag=$GITHUB_REF_NAME
            if [ "$GITHUB_REF_NAME" == "main" ]; then
              tag=latest
            fi

            if [ "$GITHUB_EVENT_NAME" != "pull_request" ]; then
              skopeo copy --insecure-policy docker-archive://$(readlink -f ./result) docker://ghcr.io/$CI_PROJECT_PATH/atciss-$target:$tag
            fi
          done
